
html {
      font-size: 2vw; 
      
    }
    .order-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      padding: 20px;
    }
    
    .button-container {
      display: flex; 
      justify-content: center; /* 水平居中 */
      align-items: center; /* 垂直居中 */
      height: 100px; /* 给容器一个高度 */
    }
    
    .fixed-bottom-button2 {
      position: absolute;
      width: 100vw; /* The button will take up 80% of the viewport width */
      /* padding: 2vh 1vw; Padding based on viewport size */
      height: 5rem;
      font-size: 2vw; /* Font size based on viewport width */
      bottom: 20px; /* Adjust the bottom position to lift the button above the bottom of the screen */
      z-index: 1; /* Ensure the button is above other content */
      background-color: rgba(76, 76, 76, 0.314);
    }

    
    .pending-order {
      background-color: #c9ffcb;
    }
    
    .partially-delivered-order {
      background-color: lightgreen;
    }
    
    .delivered-order {
      background-color: lightblue;
    }
    
    .assignbutton{
      filter: saturate(70%);
      position: absolute; /* 绝对定位，使其相对于最近的相对定位祖先定位（这里是 .example-card） */
      bottom: 10px; /* 按钮距离卡片底部的距离 */
      left: 50%; /* 初始位置设置为卡片的中间 */
      transform: translateX(-50%); /* 将按钮向左移动自身宽度的50%，以确保居中 */
      width: calc(100% - 20px); /* 使按钮宽度略小于卡片宽度，留出一定间距，可根据实际情况调整 */
      background-color: rgba(76, 76, 76, 0.314);
    }

    .assigned-to-you {
      position: absolute; /* 绝对定位，使其相对于最近的相对定位祖先定位（这里是 .example-card） */
      bottom: 10px; /* 按钮距离卡片底部的距离 */
      left: 50%; /* 初始位置设置为卡片的中间 */
      transform: translateX(-50%); /* 将按钮向左移动自身宽度的50%，以确保居中 */
      width: calc(100% - 20px); /* 使按钮宽度略小于卡片宽度，留出一定间距，可根据实际情况调整 */
      background-color: red !important; /* 设置按钮背景色为红色，!important 确保覆盖默认样式 */
      color: white !important; /* 如果需要，改变文本颜色以确保可读性 */ 
  }

  .assigned-to-other {
    filter: saturate(70%);
    position: absolute; /* 绝对定位，使其相对于最近的相对定位祖先定位（这里是 .example-card） */
    bottom: 10px; /* 按钮距离卡片底部的距离 */
    left: 50%; /* 初始位置设置为卡片的中间 */
    transform: translateX(-50%); /* 将按钮向左移动自身宽度的50%，以确保居中 */
    width: calc(100% - 20px); /* 使按钮宽度略小于卡片宽度，留出一定间距，可根据实际情况调整 */
    background-color: burlywood !important; /* 设置按钮背景色为红色，!important 确保覆盖默认样式 */
    color: white !important; /* 如果需要，改变文本颜色以确保可读性 */ 
}

.is-delivered {
  position: absolute; /* 绝对定位，使其相对于最近的相对定位祖先定位（这里是 .example-card） */
  bottom: 10px; /* 按钮距离卡片底部的距离 */
  left: 50%; /* 初始位置设置为卡片的中间 */
  transform: translateX(-50%); /* 将按钮向左移动自身宽度的50%，以确保居中 */
  width: calc(100% - 20px); /* 使按钮宽度略小于卡片宽度，留出一定间距，可根据实际情况调整 */
  background-color: gray !important; /* 设置按钮背景色为红色，!important 确保覆盖默认样式 */
  color: white !important; /* 如果需要，改变文本颜色以确保可读性 */ 
}

  .ressign {
    filter: saturate(70%);
    position: absolute; /* 绝对定位，使其相对于最近的相对定位祖先定位（这里是 .example-card） */
    bottom: 10px; /* 按钮距离卡片底部的距离 */
    left: 50%; /* 初始位置设置为卡片的中间 */
    transform: translateX(-50%); /* 将按钮向左移动自身宽度的50%，以确保居中 */
    width: calc(100% - 20px); /* 使按钮宽度略小于卡片宽度，留出一定间距，可根据实际情况调整 */
    background-color: blue !important; /* 设置按钮背景色为红色，!important 确保覆盖默认样式 */
    color: white !important; /* 如果需要，改变文本颜色以确保可读性 */
}

    .example-card {
      position: relative; /* 使内部的绝对定位元素相对于此卡片定位 */
      padding-bottom: 60px; /* 为底部按钮留出空间，根据按钮大小调整 */
      display: flex; /* 使用 Flex 布局 */
      flex-direction: column; /* 子元素垂直排列 */
      height: 100%; /* 如果需要，可根据内容调整卡片高度 */
      justify-content: space-between; /* 将内容和按钮分开，内容置顶，按钮置底 */
      box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* 添加阴影效果 */
      transition: 0.3s; /* 平滑过渡效果 */
      border-radius: 20px; /* 圆角边框 */
  }

  .example-card:hover {
    box-shadow: 0 8px 16px rgba(0,0,0,0.8); /* 鼠标悬浮时增强阴影 */
  }
  
    
